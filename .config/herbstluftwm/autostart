#!/usr/bin/env bash


# Herbstluftwm Config
# This File Contains My Personal KeyBindings And Some stuff


hc() {
    herbstclient "$@"
}

hc emit_hook reload
# Autostart 
$HOME/.config/herbstluftwm/start.sh

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4                            # Use the super key as the main modifier
myTerm=st                   # Set my preferred terminal
myTerms=xterm                     # Set my preferred application terminal
myEditor="emacsclient -c -a emacs"  # Set my preferred editor
myBrowser="firefox"
myMusic="/usr/bin/mocp"
myMMusic="ncmpcpp"
MMControl="mpc"
SpMusic="playerctl -i firefox"
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn $myTerm
hc keybind $Mod-e spawn $myEditor
# Dmenu launcher
hc keybind $Mod-Shift-Return spawn dmenu_run -fn 'scientifica:size=11' -nb '#212D32' -nf '#bbc5ff' -sb '#E37673' -sf '#292d3e' -p 'Ybenel:'
hc keybind $Mod-Mod1-s spawn dmenu_run -c -b -l 10 -g 4 -p 'ybenel: ' -fn 'scientifica:size=11'
hc keybind Mod1-Return spawn rofi -show drun -show-icons

# My dmenu scripts (Alt+Ctrl+Key)
hc keybind Mod1-Control-e spawn ./.dmenu/dmenu-edit-configs.sh
hc keybind Mod1-Control-h spawn ./.dmenu/dmenu-sysmon.sh
hc keybind Mod1-Control-s spawn ./.dmenu/dmenu-scrot.sh
hc keybind Mod1-Control-b spawn ./.dmenu/dmenu-setbg.sh
hc keybind Mod1-Control-p spawn passmenu

# My applications (Super+Alt+Key)
hc keybind $Mod-Mod1-l spawn $myTerms -e lynx --cfg=~/.lynx/lynx.cfg --lss=~/.lynx/lynx.lss -vikeys https://music.ybenel.cf
hc keybind $Mod-Mod1-e spawn $myTerms -e irssi
hc keybind $Mod-Mod1-f spawn $myTerms -e ~/.config/vifm/scripts/vifmrun
hc keybind $Mod-Mod1-c spawn $myTerms -e $myMusic
hc keybind $Mod-Mod1-z spawn $myTerms -e $myMMusic

# My Secondary Applications
hc keybind $Mod-Control-Return spawn $myTerm
hc keybind $Mod-Control-e spawn $myTerms -e torify irssi
hc keybind $Mod-b spawn $myBrowser


# Scratchpad
hc keybind $Mod-F1 spawn ~/.config/herbstluftwm/scratchpad.sh
hc keybind $Mod-F2 spawn ~/.config/herbstluftwm/term.sh

# Controllers
# Mocp
hc keybind Shift-Mod1-p spawn $myMusic --play
hc keybind Shift-Mod1-l spawn $myMusic --next
hc keybind Shift-Mod1-h spawn $myMusic --previous
hc keybind Shift-Mod1-space spawn $myMusic --toggle-pause
# Spotify
hc keybind Shift-Mod1-w spawn $SpMusic "play-pause"
hc keybind Shift-Mod1-d spawn $SpMusic "next"
hc keybind Shift-Mod1-a spawn $SpMusic "previous"
hc keybind Shift-Mod1-s spawn $SpMusic "stop"

# Dbus
hc keybind Mod1-p spawn playerctl play-pause

# Mpd
hc keybind Shift-Mod1-m spawn $MMControl stop
hc keybind Shift-Mod1-b spawn $MMControl prev
hc keybind Shift-Mod1-v spawn $MMControl next
hc keybind Shift-Mod1-x spawn $MMControl toggle

# Eww
hc keybind Mod1-m spawn eww open player_side
hc keybind Mod1-s spawn eww open player_side2
hc keybind Mod1-r spawn eww open time-side
hc keybind Mod1-q spawn eww open quote
hc keybind Mod1-Control-a spawn eww open weather
hc keybind Mod1-control-w spawn eww open-many player_side time-side quote weather player_side2
hc keybind Mod1-Control-x spawn eww close-all


# focusing clients
hc keybind $Mod-Left          focus left
hc keybind $Mod-Down          focus down
hc keybind $Mod-Up            focus up
hc keybind $Mod-Right         focus right
hc keybind $Mod-h             focus left
hc keybind $Mod-j             focus down
hc keybind $Mod-k             focus up
hc keybind $Mod-l             focus right

# minimize current window
herbstclient keybind $Mod-n spawn ~/.config/herbstluftwm/minimize.sh
# unminimize last window of a tag
herbstclient keybind $Mod-Control-n mktemp string MINCLIENT mktemp int LASTIDATT chain \
  . set_attr LASTIDATT 0 \
  . foreach CLIENT clients. and \
    , sprintf MINATT "%c.minimized" CLIENT \
        compare MINATT "=" "true" \
    , sprintf TAGATT "%c.tag" CLIENT substitute FOCUS "tags.focus.name" \
        compare TAGATT "=" FOCUS \
    , sprintf CURRENTIDATT "%c.my_minimized_age" CLIENT and \
      : substitute LASTID LASTIDATT \
          compare CURRENTIDATT 'gt' LASTID \
      : substitute CURRENTID CURRENTIDATT \
          set_attr LASTIDATT CURRENTID \
    , set_attr MINCLIENT CLIENT \
  . and \
    , compare MINCLIENT "!=" "" \
    , substitute CLIENT MINCLIENT chain \
      : sprintf MINATT "%c.minimized" CLIENT \
          set_attr MINATT false \
      : sprintf CURRENTIDATT "%c.my_minimized_age" CLIENT \
          remove_attr CURRENTIDATT \


# moving clients
hc keybind $Mod-Shift-Left    shift left
hc keybind $Mod-Shift-Down    shift down
hc keybind $Mod-Shift-Up      shift up
hc keybind $Mod-Shift-Right   shift right
hc keybind $Mod-Shift-h       shift left
hc keybind $Mod-Shift-j       shift down
hc keybind $Mod-Shift-k       shift up
hc keybind $Mod-Shift-l       shift right

# splitting frames
hc keybind $Mod-u             split  bottom  0.5
hc keybind $Mod-o             split  right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h      resize left +$resizestep
hc keybind $Mod-Control-j      resize down +$resizestep
hc keybind $Mod-Control-k      resize up +$resizestep
hc keybind $Mod-Control-l      resize right +$resizestep
hc keybind $Mod-Control-Left   resize left +$resizestep
hc keybind $Mod-Control-Down   resize down +$resizestep
hc keybind $Mod-Control-Up     resize up +$resizestep
hc keybind $Mod-Control-Right  resize right +$resizestep

# tags
tag_names=("ﮊ" "ﮈ" "ﰌ" "" "" "")
tag_keys=( {1..6} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind Mod1-Tab use_index +1 --skip-visible
hc keybind Mod1-Shift-Tab use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-f floating toggle
hc keybind $Mod-space fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-Tab                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind Control-Tab         cycle_all +1
hc keybind Control-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#00ced1'
hc set frame_border_normal_color '#8a2be2'
hc set frame_bg_normal_color '#912cee'
hc set frame_bg_active_color '#3a5fcd'
hc set frame_border_width 2
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_padding 0
hc set focus_follows_mouse 1

hc attr theme.active.color '#00ced1'
hc attr theme.normal.color '#8a2be2'
hc attr theme.urgent.color white
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#00ced1'
hc attr theme.active.outer_color '#8a2be2'
hc attr theme.background_color '#7a67ee'

hc set window_gap 3
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_crosses_monitor_boundaries 1
hc set swap_monitors_to_get_tag 1

# rules 
## Tag == workspace
hc unrule -F
hc rule class="LibreWolf" tag=1 # move browser to tag 1
hc rule class="Chrome" tag=1 # move all browser to tag 1
hc rule class="Chromium" tag=1 # move all browser to tag 1
hc rule class="Firefox" tag=1 # move all browser to tag 1
hc rule class="mpv" tag=4 # move all browser to tag 1
hc rule class="atom" tag=3 # move all browser to tag 1
hc rule class="vlc" tag=3 # move all browser to tag 1
hc rule class="atom" tag=3 # move all browser to tag 1
hc rule class="stremio" tag=3 # move all browser to tag 1
hc rule class="gimp" tag=3 # move all browser to tag 1
hc rule class="VirtualBox" tag=5 # move all VMs to tag 5
hc rule title='Oracle VM VirtualBox Manager' tag=4
hc rule class="VirtualBox" pseudotile=on
hc rule class="VirtualBox" fullscreen=on
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
#hc hide_covered_windows true
# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1504x846+0+0
# or simply:
hc detect_monitors
#hc set_monitors 1920x1080+0+0 #1920x1060+1920+22 1920x1060+3840+22
# hc set_monitors 1366x768+0+0 1440x720+0+0 #1920x1060+1920+22 1920x1060+3840+22
#hc set_monitors 1366x768+0+0 1366x768+0+0 #1920x1060+1920+22 1920x1060+3840+22

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" $monitor &
done
