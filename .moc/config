ReadTags = yes
MusicDir = "/home/ybenel/Music"
Fastdir1 = ${MusicDir}/Electro
Fastdir2 = ${MusicDir}/Singing
Fastdir3 = ${MusicDir}/Classical
Fastdir4 = ${MusicDir}/Splitter
Fastdir5 = ${MusicDir}/Special
StartInMusicDir = yes
Shuffle = yes

# Default FormatString:
#
#   %n - Track number
#   %a - Artist
#   %A - Album
#   %t - Title
#   %(X:TRUE:FALSE) - Ternary expression: if X exists, do TRUE,
#                     otherwise FALSE.  The escape character must
#                     be doubled (i.e., '\\').  (See zshmisc
#                     documentation for more information.)
#
#FormatString = "%(n:%n :)%(a:%a - :)%(t:%t:)%(A: \(%A\):)"

# Input and output buffer sizes (in kilobytes).
#InputBuffer = 512                  # Minimum value is 32KB
#OutputBuffer = 512                 # Minimum value is 128KB

# How much to fill the input buffer before playing (in kilobytes)?
# This can't be greater than the value of InputBuffer.  While this has
# a positive effect for network streams, it also causes the broadcast
# audio to be delayed.
#Prebuffering = 64

# Use this HTTP proxy server for internet streams.  If not set, the
# environment variables http_proxy and ALL_PROXY will be used if present.
#
# Format: HTTPProxy = PROXY_NAME:PORT
#
#HTTPProxy =

# Sound driver - OSS, ALSA, JACK, SNDIO (on OpenBSD) or null (only for
# debugging).  You can enter more than one driver as a colon-separated
# list.  The first working driver will be used.
SoundDriver = JACK

# Jack output settings.
JackClientName = "moc"
JackStartServer = no
JackOutLeft = "system:playback_1"
JackOutRight = "system:playback_2"

# OSS output settings.
#OSSDevice = /dev/dsp
#OSSMixerDevice = /dev/mixer
#OSSMixerChannel1 = pcm             # 'pcm', 'master' or 'speaker'
#OSSMixerChannel2 = master          # 'pcm', 'master' or 'speaker'

# ALSA output settings.  If you need to dump the audio produced by MOC
# to a file for diagnostic purposes, the following setting of 'ALSADevice'
# should do that:
#
#    ALSADevice=tee:hw,'/tmp/out.wav',wav
#
#ALSADevice = default
#ALSAMixer1 = PCM
#ALSAMixer2 = Master

# Under some circumstances on 32-bit systems, audio played continously
# for long periods of time may begin to stutter.  Setting this option to
# 'yes' will force MOC to avoid ALSA's dmix resampling and prevent this
# stutter.  But it also has other implications:
#
# - You may experience unacceptably high CPU load.
# - ALSA's resampler plug-ins will not be used.
# - The resampling may be of lower quality than ALSA would provide.
# - You may need to try different "ResampleMethod" option settings.
# - The "ForceSampleRate" option may be ineffective.
# - If libsamplerate is not configured, many audios may be unplayable.
#
#ALSAStutterDefeat = no

# Save software mixer state?
# If enabled, a file 'softmixer' will be created in '~/.moc/' storing the
# mixersetting set when the server is shut down.
# Note that there is a "hidden" 'Amplification' setting in that file.
# Amplification (0-200) is used to scale the mixer setting (0-100).  This
# results in a higher signal amplitude but may also produce clipping.
#Softmixer_SaveState = yes

# Save equalizer state?
# If enabled, a file 'equalizer' will be created in '~/.moc/' storing the
# equalizer settings when the server is shut down.
# Note that there is a "hidden" 'Mixin' setting in that file.
# Mixin (0.0-1.0) is used to determine how much of the original signal is
# used after equalizing.  0 means to only use the equalized sound, while 1
# effectively disabled the mixer.  The default is 0.25.
#Equalizer_SaveState = yes

# Show files with dot at the beginning?
#ShowHiddenFiles = no

# Hide file name extensions?
#HideFileExtension = no

# Show file format in menu?
#ShowFormat = yes

# Show file time in menu?  Possible values: 'yes', 'no' and 'IfAvailable'
# (meaning show the time only when it is already known, which often works
# faster).
#ShowTime = IfAvailable

# Show time played as a percentage in the time progress bar.
ShowTimePercent = no

# Values of the TERM environment variable which are deemed to be managed by
# screen(1).  If you are setting a specific terminal using screen(1)'s
# '-T <term>' option, then you will need to add 'screen.<term>' to this list.
# Note that this is only a partial test; the value of the WINDOW environment
# variable must also be a number (which screen(1) sets).
#ScreenTerms = screen:screen-w:vt100

# Values of the TERM environment variable which are deemed to be xterms.  If
# you are using MOC within screen(1) under an xterm, then add screen(1)'s
# TERM setting here as well to cause MOC to update the xterm's title.
#XTerms = xterm
#XTerms += xterm-colour:xterm-color
XTerms += xterm-256colour:xterm-256color
#XTerms += rxvt:rxvt-unicode
#XTerms += rxvt-unicode-256colour:rxvt-unicode-256color
#XTerms += eterm

# Theme file to use.  This can be absolute path or relative to
# /usr/share/moc/themes/ (depends on installation prefix) or
# ~/.moc/themes/ .
#
# Example:    Theme = laras_theme
#
Theme = ybenel 
AutoLoadLyrics = yes
MOCDir = ~/.moc
UseRCC = yes
UseRCCForFilesystem = yes
Precache = yes
SavePlaylist = yes
SyncPlaylist = yes
SeekTime = 1
SilentSeekTime = 5
# Which resampling method to use.  There are a few methods of resampling
# sound supported by libresamplerate.  The default is 'Linear') which is
# also the fastest.  A better description can be found at:
#
#    http://www.mega-nerd.com/libsamplerate/api_misc.html#Converters
#
# but briefly, the following methods are based on bandlimited interpolation
# and are higher quality, but also slower:
#
#    SincBestQuality   - really slow (I know you probably have an xx GHz
#                        processor, but it's still not enough to not see
#                        this in the top output :)  The worst case
#                        Signal-to-Noise Ratio is 97dB.
#    SincMediumQuality - much faster.
#    SincFastest       - the fastest bandlimited interpolation.
#
# And these are lower quality, but much faster methods:
#
#    ZeroOrderHold - really poor quality, but it's really fast.
#    Linear - a bit better and a bit slower.
#
ResampleMethod = SincMediumQuality
UseRealtimePriority = yes
TagsCacheSize = 512

# Self-describing ModPlug options (with 'yes' or 'no' values).
#ModPlug_Oversampling = yes
#ModPlug_NoiseReduction = yes
#ModPlug_Reverb = yes
#ModPlug_MegaBass = no
ModPlug_Surround = yes
ModPlug_ResamplingMode = FIR

# Other self-describing ModPlug audio characteristic options.
# (Note that the 32 bit sample size seems to be buggy.)
ModPlug_Channels = 2               # 1 or 2 channels
#ModPlug_Bits = 16                  # 8, 16 or 32 bits
#ModPlug_Frequency = 44100          # 11025, 22050, 44100 or 48000 Hz
#ModPlug_ReverbDepth = 50            # 0 (quiet) to 100 (loud)
#ModPlug_ReverbDelay = 0            # Delay in ms (usually 40-200ms)
#ModPlug_BassAmount = 0             # 0 (quiet) to 100 (loud).
#ModPlug_BassRange = 10             # Cutoff in Hz (10-100).
ModPlug_SurroundDepth = 40          # Surround level 0(quiet)-100(heavy).
#ModPlug_SurroundDelay = 0          # Surround delay in ms, usually 5-40ms.
#ModPlug_LoopCount = 0              # 0 (never), n (times) or -1 (forever)
