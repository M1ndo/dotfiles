#!/usr/bin/env bash 


# Herbstluftwm Config
# This File Contains My Personal KeyBindings And Some stuff


hc() {
    herbstclient "$@"
}

hc emit_hook reload
xsetroot -solid '#313330'
compton & 
nitrogen --restore &
xclickroot -m xterm &

# The Following Code Is Written To Implement Hide/Restore Windows
#function hidden_windows() {
#  for i in $(herbstclient attr clients | grep ‘0x’)
#  do
#    if herbstclient attr clients.$i | grep -q “‘$tag”; then
#      window=$(herbstclient attr clients.$i | grep ‘title’ | cut -d’”’ -f2)
#      [[ $hidden ]] && hidden=”$hidden\n$window” || hidden=”$window”
#    fi
#  done
#  [[ $hidden ]] && return 0 || return 1
#}

#function unhide() {
#  for i in $(herbstclient attr clients | grep ‘0x’)
#  do
#    if herbstclient attr clients.$i | grep -q “$@”; then
#      winid=${i%.}
#      break
#    fi
#  done
#  [[ $winid ]] && herbstclient chain . use $tag .  bring $winid
#}
 
#function unhide_window() {
#  case $window in
#    ‘[ all ]’)    hide_window 0 ;;
#    ‘[ last ]’)   hide_window -1 ;;
#    *)            unhide “$window”
#                  release_ticktag $tag
#                  ;;
#  esac
#}
 
#tag=$(herbstclient list_monitors | grep '\[FOCUS\]' | cut -d'"' -f2)
#case "$@" in
#  +1)   herbstclient dump “‘$tag” || herbstclient add “‘$tag”
#        herbstclient move “‘$tag”
#        ;;
#  -1)   if herbstclient dump “‘$tag”; then
#          herbstclient chain . lock . use “‘$tag”
#          winid=$(herbstclient attr clients.focus.winid)
#          herbstclient chain . use $tag . bring $winid . unlock
#          release_ticktag $tag
#        fi
#        ;;
#  0)    herbstclient dump “‘$tag” && herbstclient merge_tag “‘$tag” ;;
#  *)    if hidden_windows; then
#          if (( $(echo -e $hidden | wc -l) - 1 )); then
#            if window=$(echo -e $hidden | sort | sed “1i[ all ]\n[ last ]” | $(dwrapper) -p “Raise Window □ $tag”); then
#              unhide_window
#            fi
#          else
#            if window=$(echo -e $hidden | sort | $(dwrapper) -p “Raise Window □ $tag”); then
#              unhide_window
##            fi
#          fi
#        fi
#        ;;
#esac

# Toggle Hide / Restore PolyBar 

#minimal=0
#hc -i |
#while read line; do
# case $line in
 # minimal_layout*)
 #  case $minimal in
  #  0)
   #  minimal=1
    # hc pad 0 10 10 10 10
     #window=( "polybar" )
     #for i in ${window[@]}; do
     # win_id=$(xdotool search --name "$i")
   #   xdotool windowmove $win_id x -24
   #  done
   #  ;;
   # 1|*)
     #minimal=0
    # hc pad 0 34 10 10 10
   #  window=( "polybar" )
  #   for i in ${window[@]}; do
 #     win_id=$(xdotool search --name "$i")
#      xdotool windowmove $win_id x 0
#     done
#     ;;
#   esac
# esac
#done


# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4                            # Use the super key as the main modifier
myTerm=xterm                   # Set my preferred terminal
myEditor="nvim"  # Set my preferred editor

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn $myTerm
hc keybind $Mod-e spawn $myEditor

# Dmenu launcher
hc keybind $Mod-Shift-Return spawn dmenu_run -fn 'Mononoki Nerd Font:size=10' -nb '#292d3e' -nf '#bbc5ff' -sb '#82AAFF' -sf '#292d3e' -p 'dmenu:'

# My dmenu scripts (Alt+Ctrl+Key)
hc keybind Mod1-Control-e spawn ./.dmenu/dmenu-edit-configs.sh
hc keybind Mod1-Control-h spawn ./.dmenu/dmenu-sysmon.sh
hc keybind Mod1-Control-t spawn ./.dmenu/dmenu-scrot.sh 
#hc keybind Mod1-Control-s spawn ./.dmenu/dmenu-surfraw.sh
#hc keybind Mod1-Control-t spawn ./.dmenu/dmenu-trading.sh
hc keybind $Mod-Control-s spawn rofi -show-icons -show run 

# My applications (Super+Alt+Key)
hc keybind $Mod-Mod1-j spawn $myTerm -e joplin
hc keybind $Mod-Mod1-c spawn $myTerm -e mocp 
hc keybind $Mod-Mod1-i spawn $myTerm -e irssi
hc keybind $Mod-Mod1-a spawn $myTerm -e PrNdOwN 

# focusing clients
hc keybind $Mod-Left          focus left
hc keybind $Mod-Down          focus down
hc keybind $Mod-Up            focus up
hc keybind $Mod-Right         focus right
hc keybind $Mod-h             focus left
hc keybind $Mod-j             focus down
hc keybind $Mod-k             focus up
hc keybind $Mod-l             focus right

## Hide / Restore Windows
#hc keybind $Mod-n             spawn hide_window +1
#hc keybind $Mod-Shift-n	      spawn hide_window -1	
#hc keybind $Mod-b 	emit_hook minimal_layout


# moving clients              
hc keybind $Mod-Shift-Left    shift left
hc keybind $Mod-Shift-Down    shift down
hc keybind $Mod-Shift-Up      shift up
hc keybind $Mod-Shift-Right   shift right
hc keybind $Mod-Shift-h       shift left
hc keybind $Mod-Shift-j       shift down
hc keybind $Mod-Shift-k       shift up
hc keybind $Mod-Shift-l       shift right

# splitting frames
hc keybind $Mod-u             split  bottom  0.5
hc keybind $Mod-o             split  right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h      resize left +$resizestep
hc keybind $Mod-Control-j      resize down +$resizestep
hc keybind $Mod-Control-k      resize up +$resizestep
hc keybind $Mod-Control-l      resize right +$resizestep
hc keybind $Mod-Control-Left   resize left +$resizestep
hc keybind $Mod-Control-Down   resize down +$resizestep
hc keybind $Mod-Control-Up     resize up +$resizestep
hc keybind $Mod-Control-Right  resize right +$resizestep

# tags
tag_names=("" "" "" "") 
tag_keys=( {1..4} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-m fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1 
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_padding 0
hc set focus_follows_mouse 1

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color white
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 1
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 8
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_crosses_monitor_boundaries 1
hc set swap_monitors_to_get_tag 1

# rules
hc unrule -F
#hc rule class=XTerm tag=2 # move all xterms to tag 2 
hc rule class=VirtualBox tag=3 # move all VMs to tag 3
hc rule title='Oracle VM VirtualBox Manager' tag=3 
hc rule class=VirtualBox pseudotile=on
hc rule class=VirtualBox fullscreen=on
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
#hc hide_covered_windows true
# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors
#hc set_monitors 1920x1080+0+0
hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" $monitor &
done
